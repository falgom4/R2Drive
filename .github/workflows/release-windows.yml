name: Windows Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 0.1.0)'
        required: true
        default: '0.1.0'

env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v4
      - name: create release
        id: create-release
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${{ github.event.inputs.version }}-windows`,
              name: `R2Drive v${{ github.event.inputs.version }} (Windows)`,
              body: 'Build espec√≠fico para Windows - Consulta el CHANGELOG.md para ver las novedades.',
              draft: true,
              prerelease: false
            })
            return data.id

  build-windows:
    needs: create-release
    permissions:
      contents: write
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: configure git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: clear npm cache and configure
        run: |
          npm cache clean --force
          npm config set registry https://registry.npmjs.org/
          npm config set fetch-retries 10
          npm config set fetch-retry-mintimeout 10000
          npm config set fetch-retry-maxtimeout 60000

      - name: install dependencies with multiple attempts
        run: |
          $attempt = 1
          $maxAttempts = 3
          do {
            Write-Host "Attempt $attempt of $maxAttempts"
            npm install --no-package-lock --timeout=300000
            if ($LASTEXITCODE -eq 0) {
              break
            }
            $attempt++
            Start-Sleep 30
          } while ($attempt -le $maxAttempts)
        shell: pwsh

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}

  publish-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [create-release, build-windows]

    steps:
      - name: publish release
        uses: actions/github-script@v7
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false
            })